library(manipulate)
install.packages(manupulate)
library(manipulate)
install.packages(c("slidify", "ggplot2", "devtools"))
library(ggplot2)
search()
library(devtools)
library(manipulate)
install.packages("manipulate.tar.gz", repos=NULL, type="source")
library(manipulate)
library(manipulate)
library(manipulate)
install.packages("manipulate")
library(manipulate)
help.search('rnorm')
args('rnorm')
lapply
available.packages()
a = available.packages()
head(rownames(a), 3)
c('a', 'b')
install.packages('KernSmooth')
library('KernSmooth')
cd ~/
x <- 1;20
x <- 1:20
x
1/0
1/Inf
x = c(0.7, 0.8)
x
x[0]
m <- matrix(nrow=2, ncol=3)
m
dim(m)
x <- list(foo = 1:4, bar=0.6)
x
x$foo
x$bar
$báº£
$bar
x <- list(a = list(10, 12, 14), b = c(3.14, 2.81))
x
x[[1]]
x[1][3]
x[[1]][3]
x[[1]][[3]
x[[1]][[3]]
x[[1]][[3]]
airquality[1:6, ]
good <- complete.cases(airquality[1:6, ])
airquality[good][1:6, ]
good <- complete.cases(airquality)
airquality[good, ][1:6, ]
good
install.packages('swirl')
package_version('swirl')
packageVersion("swirl")
library(swirl)
ls()
rm(list-ls())
rm(list=ls())
library(swirl)
install_from_swirl("R Programming")
swirl()
exit
exit()
quit
quit
quit()
x <- c('a', 'b', 'c', 'd')
x
x[0]
x[[0]
x[[0]]
x[[0]]
x[1]
airquality
ncol(airquality)
nc = ncol(airquality)
means = mean(nc)
means
nc <- ncol(airquality)
nc
means = numeric(nc)
means
x <- 4
x.type
?x
??x
typeof(x)
x.type
x <- 4
typeof(x)
x <- c(4, 'a', TRUE)
typeof(x)
x
x <- c(1,3,5)
y <- c(3, 2, 10)
rbind(x, y)
typeof(rbind(x,y))
rbind(x, y).is
airquality
airquality$Month
airquality$Month == 5
rbind(airquality$Month, airquality$Ozone)
cbind(airquality$Month, airquality$Ozone)
cbind(airquality$Month == 5, airquality$Ozone)
cbind(airquality$Month == 6, airquality$Temp)
result = cbind(airquality$Month == 6, airquality$Temp)
result[32..61]
result[32,61]
i <- = 0
i <- 0
for i = 32; i < 61; i++
is.numeric(x <- 4)
x <- c(4, "a", TRUE)
is.integer(x)
is.integer(c)
is.character(x)
is.matrix(rbind(c(1,3,5)), rbind(c(3,2,10)))
is.matrix(rbind(c(1,3,5),c(3,2,10)))
x <- list(2, "a", "b", TRUE)
x[[2]]
typeof(x[[2]])
is.list(x[[2]])
x <- 1:4
y<-2:3
x + y
x
y
z = x + y
is.numeric(z)
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6]=0
x
x <- c(3, 5, 1, 10, 12, 6)
y = x
x[x < 6] <- 0
x
setwd('~/Download')
setwd('~/Download')
setwd('~/')
dir()
setwd('Downloads/')
read.csv(file = 'hw1_data.csv', header = TRUE)
read.csv(file = 'hw1_data.csv', header = FALSE)
read.csv(file = 'hw1_data.csv', header = TRUE)
X = read.csv(file = 'hw1_data.csv', header = TRUE)
x = read.csv(file = 'hw1_data.csv', header = TRUE)
x
x[[0]]
x[[1]]
x
x$name
x['name']
x
length(x[1])
length(x)
length(x[, 1])
length(x[47, ])
length(x[47, ])
x[47]
x[[47]
x[[47]]
x[[47]]
x[47,]
x[,1]
is.na(x[,1])
a = is.na(x[,1])
a == FALSE
a[a == FALSE]
a = is.na(x[,1])
a
a[a==FALSE]
a = is.na(x[,1])
a
length(a)
x[,1]
a = x[,1]
a[a == NA]
a = x[,1]
a
mean(a)
a
mean(a[is.numeric(x)])
mean(a)
mean(x[,1])
mean(x[,1])
mean(x[,1], na.rm = TRUE)
a = x[,1] > 32
a
a = x[,1]
a = x[,1]
a
x = read.csv(file = 'hw1_data.csv', header = TRUE)
x
x$Ozone > 31
bad = x$Ozone > 31 && x$Temp==90
x(bad)
x[bad]
bad = x$Ozone > 31 && x$Temp >90
x[bad]
bad = x$Ozone > 31 && x$Temp > 90
x
bad
bad = x[, 1] > 31 && x[,4] > 90
bad
bad <- x[, 1] > 31 && x[,4] > 90
bad
bad <- x[, 1] > 31
bad
x[bad]
x[!bad]
a <- x[, 1]
a[bad]
x = read.csv(file = 'hw1_data.csv', header = TRUE)
x
bind = cbind(x$Month, x$Temp)
bind
bind[32:60, 1]
bind[32:60, 2]
bind[32:61, 2]
mean(bind[32:61, 2])
bind = cbind(x$Ozone, x$Temp)
bind
bind[na.rm]
bind
bind[x[,1] > 90, 2]
bind[bind[,1] > 90, 2]
u = bind[bind[,1] > 90, 2]
u
mean(u, na.rm=TRUE)
bind = cbind(x$Ozone, x$Temp, x$Solar.R)
bind
u = bind[bind[,1] > 90, 2, 3]
u = bind[bind[,1] > 90,,]
1:4 + 2:3
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x > 10]4
x[x > 10] <- 4
x
x
x = read.csv(file = 'hw1_data.csv', header = TRUE)
x
x[47,]
x[1,]
x[,1]
u = cbind(x$Temp, x$Month)
u
u[,32:61]
u[1,32:61]
u
u[1]
u[1, ]
u[, 1]
m = u[, 1]
m = mean(m[32:62])
m
u = cbind(x$Temp, x$Month)
mean(u[, 1], na.rm=TRUE)
x = read.csv(file = 'hw1_data.csv', header = TRUE)
mean(x[, 1], na.rm=TRUE)
max(x[, 1], na.rm=TRUE)
x[, 1]
aaaa = cbind(x$Ozone, x$Month)
aaaa
aaaa[1:30,1]
mean(aaaa[1:30,1], na.rm = TRUE)
max(aaaa[1:30,1])
max(aaaa[1:30,1], na.rm=TRUE)
x <- 1:4
y <- 2:3
x + y
x <- 4L
is.integer(x)
1:4 + 2
x
x = read.csv(file = 'hw1_data.csv', header = TRUE)
x
x[1, ]
x[47, ]
aaaa = cbind(x$Ozone, x$Solar.R, x$Temp)
aaaa
aaaa = cbind(x$Ozone, x$Solar.R, x$Temp, na.rm= TRUE)
aaaa
aaaa = cbind(x$Ozone, x$Solar.R, x$Temp)
aaaa
x <- matrix(1:6, 2, 3)
x
x[1, drop=FALSE]
x
x[1, ,drop=FALSE]
x[1, ,drop=FALSE]
search('lm')
swirl()
load(swirl)
library('swirl')
swirl()
setwd(old.dir)
ls()
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?':'
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length_30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
TRUE, FALSE, TRUE, FALSE
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, 'Vinh')
my_name <- c(my_char, "Vinh")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c("X", "Y", "Z"), 1:3, sep = "")
paste(1:3,c("X", "Y", "Z"),  sep = "")
paste(LETTERS, 1:4, sep="-")
c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
print my_na
my_na
my_data==NA
sum(my_na==TRUE)
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
length(x)
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect2)
identical?
dl
?identical
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, "data.frame")
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list <- lapply(flags)
cls_list <- lapply(flags, class)
cls_list <- sapply(flags, class)
cls_vwct <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
hhead(flag_colors)
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
new_variable <- lapply(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
quantile?
;
?quantile
?runif
?quantile
runif(10)
table(flags$animate)
tapply(flags$animate, flags$landmass,mean)
tapply(flags$population, flags$red, summary)
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
setwd('Projects/SelftTraining/DataScience/DataScienceSpecialization/GetDataClearning/Assignment4/')
ls
dir()
